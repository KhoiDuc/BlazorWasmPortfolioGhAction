name: Deploy to GitHub Pages

# Run workflow on every push to the master branch
on:
  push:
    branches: [ master ]

jobs:
  deploy-to-github-pages:
    name: Build and Deploy Blazor WASM to GitHub Pages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      PROJECT_NAME: BlazorWasmPortfolioGhAction
      DOTNET_VERSION: '8.0.x'
      OUTPUT_FOLDER: release
      BASE_HREF: '/BlazorWasmPortfolioGhAction/'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.PROJECT_NAME }}.csproj

      - name: Build .NET Core Project
        run: dotnet build ${{ env.PROJECT_NAME }}.csproj --configuration Release --nologo

      - name: Publish .NET Core Project
        run: dotnet publish ${{ env.PROJECT_NAME }}.csproj --configuration Release --output ${{ env.OUTPUT_FOLDER }} --nologo --no-restore

      - name: Change base-tag in index.html
        shell: bash
        run: sed -i.bak 's|<base href="/" />|<base href="${{ env.BASE_HREF }}" />|g' ${{ env.OUTPUT_FOLDER }}/wwwroot/index.html

      - name: Copy index.html to 404.html
        run: cp ${{ env.OUTPUT_FOLDER }}/wwwroot/index.html ${{ env.OUTPUT_FOLDER }}/wwwroot/404.html

      - name: Add .nojekyll file
        run: touch ${{ env.OUTPUT_FOLDER }}/wwwroot/.nojekyll

      - name: Validate wwwroot folder
        run: ls -R ${{ env.OUTPUT_FOLDER }}/wwwroot

      - name: Commit wwwroot to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: ${{ env.OUTPUT_FOLDER }}/wwwroot

      - name: Upload release folder as artifact
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: release-folder
          path: ${{ env.OUTPUT_FOLDER }}
