@using BlazorWasmPortfolioGhAction.Store.State
@using static BlazorWasmPortfolioGhAction.Store.Actions.DissertationAction
@inherits FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<DissertationState> State

<div class="cv-section container-fluid">
    <div class="row" style="justify-content: center; padding: 20px;">
        <h3 class="title">@State.Value.Title</h3>
        <p>Your device is not optimized for viewing PDFs. View the images below or download the PDF.</p>

        <div class="carousel carousel-dark slide" id="mobileCarousel" data-bs-ride="carousel">
            <div class="carousel-indicators">
                @for (int i = 0; i < State.Value.Images.Count; i++)
                {
                    <button type="button"
                            data-bs-target="#mobileCarousel"
                            data-bs-slide-to="@i"
                            class="@(i == State.Value.CurrentImageIndex ? "active" : "")"
                            aria-current="@(i == State.Value.CurrentImageIndex ? "true" : "false")"
                            aria-label="@($"Slide {i + 1}")"></button>
                }
            </div>
            <div class="carousel-inner">
                @for (int i = 0; i < State.Value.Images.Count; i++)
                {
                    int index = i;
                    <div class="carousel-item @(i == State.Value.CurrentImageIndex ? "active" : "")">
                        <img src="@State.Value.Images[i]"
                             class="cv-image"
                             alt="@($"Page {i + 1} of {State.Value.Title}")"
                             @onclick="() => Dispatcher.Dispatch(new OpenFullImageAction(index))" />
                    </div>
                }
            </div>
            <button class="carousel-control-prev"
                    type="button"
                    data-bs-target="#mobileCarousel"
                    data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next"
                    type="button"
                    data-bs-target="#mobileCarousel"
                    data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
    <div class="row" style="justify-content: center; position: relative;">
        <a role="button"
           tabindex="0"
           href="@State.Value.FilePath"
           target="_blank"
           class="outline-button btn btn-primary text-dark"
           style="max-width: 250px;">
            <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 1024 1024" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">
                <path d="M505.7 661a8 8 0 0 0 12.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z"></path>
            </svg>&nbsp;Download CV
        </a>
    </div>
</div>

@if (State.Value.IsFullScreen)
{
    <div class="full-image-overlay" @onclick="() => Dispatcher.Dispatch(new CloseFullImageAction())">
        <img src="@State.Value.Images[State.Value.CurrentImageIndex]"
             class="full-image"
             alt="Full view" />
    </div>
}

<style>
    .mobile-pdf-download {
    text-align: center;
    padding: 20px;
}

.cv-image {
    max-width: 100%;
    height: auto;
}

.mobile-carousel {
    padding: 20px;
    text-align: center;
}

.cv-image {
    height: auto;
    max-width: 60vw;
    padding-bottom: 2rem;
    padding-top: 3rem;
    cursor: pointer;
}

@@media (max-width: 768px) {
    .cv-image {
        height: auto;
        max-width: 75vw;
        padding-top: 1rem;
    }
    .outline-button {
        font-size: .8rem !important;
    }
}

.outline-button, .outline-button:hover {
    background-color: initial !important;
    border: 1.8px solid #4a90e2 !important;
    max-width: 180px !important;
}

.full-image-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.full-image {
    max-width: 90%;
    max-height: 90%;
    object-fit: contain;
}
</style>