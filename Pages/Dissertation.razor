@page "/Dissertation/{File}"
@using BlazorWasmPortfolioGhAction.Store.State
@using Fluxor
@using static BlazorWasmPortfolioGhAction.Store.Actions.DissertationAction
@inherits FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<DissertationState> State

@if (State.Value.IsLoading)
{
    <BlazorWasmPortfolioGhAction.Components.Dissertation.LoadingSpinner />
}
else if (!string.IsNullOrEmpty(State.Value.ErrorMessage))
{
    <BlazorWasmPortfolioGhAction.Components.Dissertation.ErrorComponent Message="@State.Value.ErrorMessage" />
}
else if (State.Value.IsMobile)
{
    <BlazorWasmPortfolioGhAction.Components.Dissertation.MobileView />
}
else
{
    <BlazorWasmPortfolioGhAction.Components.Dissertation.DesktopView />
}

@code {
    [Parameter]
    public string? File { get; set; }

    private string? _previousFile;

    protected override void OnParametersSet()
    {
        if (_previousFile != File && !string.IsNullOrEmpty(File))
        {
            _previousFile = File;
            Dispatcher.Dispatch(new InitializeAction(File));
        }

        base.OnParametersSet();
    }
}